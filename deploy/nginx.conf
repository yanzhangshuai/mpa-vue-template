events {
  worker_connections 1024;
}

http {
  include mime.types;
  default_type text/html;
  sendfile on;
  keepalive_timeout 65;
  charset utf-8;
  error_log /var/log/nginx/error.log;
  access_log /var/log/nginx/access.log;
  # 引入定义变量指令的文件
  server {
    listen 80;
    include /etc/nginx/conf.d/*.variable;
    root /usr/share/nginx/html;
    index index.html index.htm;

    gzip on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_comp_level 6;
    gzip_types text/plain application/javascript text/css application/xml;
    gzip_vary on;
    gzip_static on;
    gzip_proxied expired no-cache no-store private auth;

    error_page 404 /404.html;

    location / {
      try_files $uri /$DEFAULT_MODULE;
    }

    # set $module module-a|module-b;

    location ~* ^/(?<module>(module-a|module-b)) {
      # return 200 $1;
      try_files $uri /$module/index.html =404;
    }

    location ~* ^/api/(?<url>(.*)) {

      if ( $API_SERVER ~ (.+)/$ ) {
        # 去除/
        set $API_SERVER $1;
      }

      resolver 8.8.8.8;

      proxy_set_header Host $proxy_host;
      proxy_redirect off;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      proxy_pass $API_SERVER/$url$is_args$args;
    }

    location ~* ^/upload/(?<url>(.*)) {

      if ( $FILE_SERVER ~ (.+)/$ ) {
        # 去除/
        set $FILE_SERVER $1;
      }

      client_max_body_size 3000M;

      resolver 8.8.8.8;

      proxy_set_header Host $proxy_host;
      proxy_redirect off;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;


      proxy_pass $FILE_SERVER/$url$is_args$args;
    }

    location = /404.html {

    }

  }

  # server {
  #   listen 80;
  #   return 307 https://$host$request_uri;
  # }
}